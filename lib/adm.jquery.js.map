{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 227c5ed9d5d7a7ff030a","webpack:///./src/adm.jquery.js","webpack:///./src/common/settings.js","webpack:///./src/common/cache-helper.js","webpack:///./src/common/DataCache.js"],"names":["WIN","window","logTrace","console","trace","ERRURLMSG","requestAjax","config","callback","errCallback","fnCB","$p","isJquery","url","reject","data","btnWaiting","waiting","dataType","test","search","location","host","fnBeforeAjax","item","JSON","stringify","fnWaiting","startTime","Date","$","ajax","extend","type","ajaxParam","then","result","success","fnAjaxDone","res","Function","resolve","err","fnAjaxFail","always","getCacheName","cacheName","dataStr","md5","strData","hasOwnProperty","obj","key","get","undefined","cacheData","$promise","fromCache","cache","save","delete","RegExp","getAll","cacheType","cacheStor","_cache","len","length","i","indexOf","cachePrefix","replace","parse","getItem","e","getJSON","post","clear","setCachePrefix","prefix","warn","setSettings","setting","errAlert","errMsg","alert","msg","time","code","tipConfig","message","responseText","statusText","slice","status","getCacheStor","getCacheDataByName","deleteCacheDataByName","saveTOCache","isString","getPromise","dataCache","getTime","t","adjustCacheName","encodeURIComponent","undefinedVal","_e","d","removeItem","cfg","expires","setItem","text","Deferred","Promise","rs","rj","done","cb","fail","DataCache","value","index","_index"],"mappings":"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","file":"adm.jquery.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"adm\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"adm\"] = factory();\n\telse\n\t\troot[\"adm\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 227c5ed9d5d7a7ff030a","/**\n * @file 全局数据模型 model\n * 提供数据的读取、保存/缓存、删除、更新等操作。各模块 model 可继承该模型，以进行模块范围内的数据存取操作。\n * @module adm\n * @author lzwy0820@qq.com\n * @since 2016-03-31\n *\n * @example\n * import adm from 'ajax-data-model';\n * const upsModel = $.extend(true, {}, adm, {aa: 'ccc', restapi: {task_type: '/rest/task/type'}});\n * // 支持的方法：upsModel.get、upsModel.save、upsModel.delete、upsModel.clear\n * // 配置了 url，则都返回 Promise 对象，不管是否缓存\n * upsModel.get({url: '/rest/xxx'}).done().fail().then();\n * // 保存数据到 localStorage 中\n * upsModel.save('appList', [{music: 'test'}], 'localStorage');\n * // 通过名字获取，返回存储的数据或者 undefined\n * upsModel.get('appList');\n * upsModel.get('appList', 'localStorage');\n *\n * @example\n * // 获取 task_type 数据\n * const data = {type: 10};\n * adm.get({\n *     url: upsModel.restapi.task_type,\n *     data: data,\n *     cache: 'sessionStorage',             // 缓存到 sessionStorage\n *     fromCache: 'sessionStorage',         // 获取时优先从 sessionStorage 读取\n *     cacheName: 'task_type_' + data.type, // 缓存、从缓存读取时使用的名称\n *     expires: 1000 * 60 * 5,              // 数据有效时间为 5 分钟\n * }).then((result) => {\n *     let taskTypeList = result.value || [];\n *     console.log(taskTypeList);\n * }, (err) {\n *     console.log(err);\n * });\n */\n'use strict';\n\n// import $ from 'jquery';\n\nimport settings from './common/settings';\nimport {\n    getCacheStor,\n    deleteCacheDataByName,\n    getCacheDataByName,\n    saveTOCache,\n    isString,\n    getPromise\n} from './common/cache-helper';\n\n// 常量定义\nconst WIN = window;\nconst logTrace = WIN.console.trace;\nconst ERRURLMSG = '配置了 URL 参数，但值为空或类型不对';\n\n/**\n * ajax 请求通用方法\n * @param {Object}   config - 请求参数配置\n * @param {String}   config.url - ajax url，必须存在，`config.ajaxParam` 中配置此参数无效\n * @param {Object}   config.ajaxParam - ajax 额外参数扩展，如涉及文件上传等\n * @param {Object}   config.data - ajax 请求的参数\n * @param {Object}   config.waiting - 用于传递给 settings.fnWaiting 方法使用的参数配置\n * @param {Object}   config.tipConfig[true] - ajax 出错时的提示配置。配置为 false 时，禁用全局的系统提示，包括 成功/出错/404/50x 等\n * @param {Object}   config.errAlert[true] - ajax error 时是否给出提示\n * @param {Function} callback - ajax 请求成功时回调\n * @param {Function} errCallback - ajax 请求失败或 code !== 200 时回调\n * @param {Object}   param - 传递给 ajax 请求的额外参数\n * @param {Function} fnCB - 请求到数据之后的立即回调方法，用于请求成功后需要前置处理的情况\n * @return {Promise}  用于自定义回调处理。\n *                    注意：ajax 请求的 done/fail 回调，与 callback/errCallback 可能有区别，具体取决于 fnAjaxDone 与 fnAjaxFail 回调的实现\n */\nfunction requestAjax(config, callback, errCallback, fnCB) {\n    const $p = getPromise(settings.isJquery);\n\n    if (!config.url || typeof config.url !== 'string') {\n        logTrace(ERRURLMSG, config.url);\n        return $p.reject(ERRURLMSG, config.url);\n    }\n\n    // data.btnWaiting 的兼容，应使用 config.waiting 参数\n    if (config.data && config.data.btnWaiting) {\n        config.waiting = config.waiting || config.data.btnWaiting;\n        delete config.data.btnWaiting;\n    }\n\n    // jsonp 兼容\n    let dataType = 'json';\n\n    if (/^https?:\\/\\//.test(config.url) && config.url.search(WIN.location.host) === -1) {\n        dataType = 'jsonp';\n    }\n\n    // 请求前回调，可以引用方式修改 config\n    if (settings.fnBeforeAjax) {\n        settings.fnBeforeAjax(config);\n    }\n\n    // 格式化 config.data\n    let item;\n\n    if ('object' === typeof config.data) {\n        for (item in config.data) {\n            if ('string' !== typeof config.data[item]) {\n                config.data[item] = JSON.stringify(config.data[item]);\n            }\n        }\n    }\n\n    // ajax 请求前处理，与请求后处理呼应\n    settings.fnWaiting(config);\n\n    const startTime = new Date();\n\n    return $.ajax($.extend(true, {\n        type: 'GET',\n        dataType\n    }, config.ajaxParam, {\n        url: config.url,\n        data: config.data\n    })).then((result) => {\n        const success = settings.fnAjaxDone(result, (res) => {\n            if (fnCB instanceof Function) {\n                fnCB(result);\n            }\n\n            if (callback instanceof Function) {\n                callback(res);\n            }\n        }, errCallback, config);\n\n        // 为 false，设为失败回调\n        if (!success) {\n            return $p.reject(result);\n        }\n\n        // 为 true\n        if (true === success) {\n            return $p.resolve(result);\n        }\n\n        // 为 Promise 风格回调\n        if ('function' === typeof success.then) {\n            // $p = success;\n            // return $p;\n            return success;\n        }\n\n        // 为其它类型，返回 success 内容\n        return $p.resolve(success);\n    }, (err) => {\n        settings.fnAjaxFail(err, config);\n\n        if (errCallback instanceof Function) {\n            errCallback(err);\n        }\n\n        return $p.reject(err);\n    }).always(() => {\n        // ajax 完成后处理\n        settings.fnWaiting(config, new Date() - startTime);\n    });\n\n    // return $p;\n}\n\n// 获取缓存数据的名称 key\nfunction getCacheName(config) {\n    // 第一个参数为字符串，则为名称，直接返回 config 作为缓存名称\n    if (isString(config) || !config) {\n        return config;\n    }\n\n    let cacheName = config.cacheName;\n    let dataStr;\n    const md5 = WIN.$ && WIN.$.md5 || WIN.md5;\n    const data = config.data;\n\n    if (!cacheName) {\n        cacheName = config.url;\n\n        if (cacheName && typeof data === 'object') {\n            let strData = JSON.stringify(data);\n\n            if (typeof md5 === 'function') {\n                strData = md5(strData);\n            }\n\n            cacheName += dataStr;\n        }\n    }\n\n    return cacheName;\n}\n\n// obj 对象中是否包含键为 key 的项\nfunction hasOwnProperty(obj, key) {\n    return obj.hasOwnProperty(key);\n}\n\n/**\n * 全局数据模型 model\n * @alias module:adm\n * @type {Object}\n */\nexport default {\n    /**\n     * 数据获取，可为远程url、缓存等\n     * @param {Object} config 为字符串时，从缓存中读取数据，否则为从远程获取数据，参数如下：\n     * ```js\n     * {\n     *     url: '',          // API url 地址，可为空。为空时应存在 cacheName，此时为从缓存中读取数据\n     *     data: {},         // url 请求参数\n     *     cache: false,     // 配置了 url 获取数据时，是否缓存数据。可取值：`false/true/sessionStorage/localStorage`\n     *     fromCache: false, // 配置了 url，是否首先尝试从缓存中读取数据。可取值：`false/true/sessionStorage/localStorage`\n     *     cacheName: '',    // 配置了 url 并且 cache 为 true，配置缓存数据的名称，不配置则取值 url (/ 会替换为 . 作为深度路径)\n     *     expires: 0,       // 如果 cache 为 true，设置缓存数据的有效期，可为 毫秒数，或 Date 类型日期\n     *     tipConfig: {delay: 2000} // ajax 出错时的提示配置。配置为 false 时，禁用全局的系统提示，包括 成功/出错/404/50x 等\n     *     errAlert: true    // ajax error 时是否给出全局提示，优先级高于 settings.errAlert\n     *     waiting: {}       // 按钮等待等配置，用于传递给 settings.fnWaiting 方法\n     *     ajaxParam: null   // ajax 额外参数扩展，如涉及文件上传等，需要修改部分参数。其中 url 参数无效，应当使用 config.url\n     * }\n     * ```\n     * @param {Object} callback 成功回调方法\n     * @param {Object} errCallback 从 url 获取时，失败后需要做一些处理的回调方法\n     * }\n     */\n    get(config, callback, errCallback) {\n        if (!config) {\n            return undefined;\n        }\n\n        let cacheData;\n        const $promise = getPromise(settings.isJquery);\n        const cacheName = getCacheName(config);\n\n        // 配置了 url，从 url 中获取\n        if (config.url) {\n            cacheData = getCacheDataByName(cacheName, config.fromCache);\n\n            // fromCache 为 true，尝试从缓存中获取数据\n            if (config.fromCache && cacheData) {\n                if (typeof callback === 'function') {\n                    callback(cacheData);\n                }\n\n                $promise.resolve(cacheData);\n                // return cacheData; // 返回数据\n                return $promise; // 这里改了后不兼容旧的调用，应该注意 bug 的出现！\n            }\n\n            config.ajaxParam = $.extend(config.ajaxParam, {\n                type: 'GET'\n            });\n\n            return requestAjax(config, callback, errCallback, (result) => {\n                // cache 为 true，缓存数据\n                if (config.cache) {\n                    this.save(cacheName, result, config);\n                }\n            });\n        } else if (hasOwnProperty(config, 'url')) { // 配置了 url，但 url 值为空\n            logTrace(ERRURLMSG, config);\n            $promise.reject(ERRURLMSG, config);\n        } else {\n            // 未配置 url，则必须配置 config.cacheName，或者 config 为字符串(作为cacheName)，此时为从缓存中取得数据\n            cacheData = getCacheDataByName(cacheName, config.fromCache || callback);\n\n            if (callback instanceof Function) {\n                callback(cacheData);\n            }\n\n            return cacheData;\n        }\n\n        return $promise;\n    },\n    /**\n     * 设置/存储数据\n     * @param {Object|String} config - 配置信息。也可以为字符串，则为需存储的数据名称。与 {@link module:adm~get} 的 config 参数相同\n     * @param {Function|Object} callback - 存储成功后回调方法。当 config 为字符串时，为需存储的数据，或方法执行后返回要存储的数据\n     * @param {Function|String} errCallback - 从 url 获取时，失败后需要做一些处理的回调方法。config 为字符串时，为配置信息，如 {cacheType, expires}\n     * @example\n     * // 存储数据到 localStorage，名称为 testdataName\n     * adm.save('testdataName', {test: 1}, 'localStorage');\n     * @example\n     * // 存储数据到远程，同时将 API 返回的结果存储到 sessionStorage\n     * adm.save({url: '/rest/dd', data: {test: 1}, cache: 'sessionStorage'});\n     */\n    save(config, callback, errCallback) {\n        const $promise = getPromise(settings.isJquery);\n        const resolve = $promise.resolve;\n        const reject = $promise.reject;\n\n        if (!config) {\n            resolve();\n            return $promise;\n        }\n\n        let cacheData;\n        const cacheName = getCacheName(config, true);\n\n        if (isString(config)) { // config 为字符串，则作为cacheName\n            if (callback instanceof Function) { // 可以存储为回调方法执行后的结果\n                saveTOCache(cacheName, callback(), errCallback);\n            } else {\n                saveTOCache(cacheName, callback, errCallback);\n            }\n            resolve(cacheName);\n        } else if (config.url) { // 配置了 url，将数据存储到远程\n            cacheData = getCacheDataByName(cacheName, config.fromCache);\n\n            // fromCache 为 true，尝试从缓存中获取数据\n            if (config.fromCache && cacheData) {\n                if (callback instanceof Function) {\n                    callback(cacheData);\n                }\n\n                resolve(cacheData);\n                // return cacheData; // 返回数据\n                return $promise; // 这里改了后不兼容旧的调用，应该注意 bug 的出现！\n            }\n\n            config.ajaxParam = $.extend({\n                type: 'POST'\n            }, config.ajaxParam);\n\n            return requestAjax(config, callback, errCallback, (result) => {\n                if (config.cache) {\n                    // 远程存储成功了，本地也需缓存数据时\n                    saveTOCache(cacheName, result, config);\n                }\n            });\n        } else if (hasOwnProperty(config, 'url')) { // 配置了url，但 url 值为空\n            logTrace(ERRURLMSG, config);\n            reject(ERRURLMSG, config);\n        } else if (cacheName) { // 没有设置 url，但设置了 config.cacheName(此时 cacheName=config.cacheName)，则保存数据到本地\n            saveTOCache(cacheName, config.data, config);\n\n            if (callback instanceof Function) {\n                callback(cacheData);\n            }\n            resolve(config.data);\n        }\n\n        return $promise;\n    },\n    /**\n     * 删除一个数据\n     * @param {Object} config - 为字符串时，作为 cacheName 尝试从缓存中删除数据。否则格式如下：\n     * ```js\n     * {\n     *     url: '',       // 配置了 url，从远程删除数据，否则从缓存中删除\n     *     cache: false,  // 配置了 url，是否还尝试从缓存中删除数据。可取值：false/true/sessionStorage/localStorage\n     *     cacheName: ''  // 从缓存中删除数据时，提供其名称。\n     * }\n     * ```\n     */\n    delete(config, callback, errCallback) {\n        if (!config) {\n            return '';\n        }\n\n        const $promise = getPromise(settings.isJquery);\n        const cacheName = getCacheName(config);\n\n        if (isString(config) || config instanceof RegExp) {\n            // 第一个参数为字符串或正则，callback 就是 cacheType\n            deleteCacheDataByName(config, callback);\n            // 删除完成都返回执行成功\n            $promise.resolve();\n        } else if (config.url) {\n            // 配置了 url，从远程删除数据\n            return requestAjax(config, callback, errCallback, {\n                type: 'DELETE'\n            }, () => {\n                if (config.cache) {\n                    // 远程删除成功了，本地也需清空时\n                    deleteCacheDataByName(cacheName, config.cache);\n                }\n            });\n        } else if (hasOwnProperty(config, 'url')) { // 配置了url，但 url 值为空\n            logTrace(ERRURLMSG, config);\n            $promise.reject(ERRURLMSG, config);\n        } else if (cacheName) {\n            deleteCacheDataByName(cacheName, config.cache);\n            $promise.resolve();\n        }\n\n        return $promise;\n    },\n    /**\n     * 返回所有存储中的所有数据\n     * @param  {String} cacheType 存储的类型：sessionStorage、localStorage 或 memory\n     * @return {Object}\n     */\n    getAll(cacheType) {\n        const cacheStor = getCacheStor(cacheType);\n        const _cache = {};\n        const len = cacheStor.length;\n        let i;\n        let item, key;\n\n        for (i = 0; i < len; i++) {\n            item = cacheStor.key(i);\n\n            if (!item || 0 !== item.indexOf(settings.cachePrefix)) {\n                continue;\n            }\n\n            key = item.replace(settings.cachePrefix, '');\n            try {\n                _cache[key] = JSON.parse(cacheStor.getItem(item));\n            } catch (e) {\n                _cache[key] = cacheStor.getItem(item);\n            }\n        }\n\n        return _cache;\n    },\n    /**\n     * {@link module:dataModel.get} 的 ajax 快捷方法\n     * @see  module:dataModel.get\n     * @param  {String}   url         url 地址\n     * @param  {Object}  data        要传递的参数，可省略\n     * @param  {Function} callback    成功回调\n     * @param  {Function}   errCallback 失败回调\n     * @returns {Promise}\n     */\n    getJSON(url, data = {}, callback, errCallback) {\n        // data 参数可以省略\n        if (data instanceof Function) {\n            errCallback = callback;\n            callback = data;\n            data = void 0;\n        }\n\n        return this.get({\n            url,\n            data\n        }, callback, errCallback);\n    },\n    /**\n     * {@link module:dataModel.save} 的 ajax 快捷方法\n     * @see  module:dataModel.save\n     * @param  {String}   url         url 地址\n     * @param  {Object}  data        要传递的参数\n     * @param  {Function} callback    成功回调\n     * @param  {Function}   errCallback 失败回调\n     * @returns {Promise}\n     */\n    post(url, data, callback, errCallback) {\n        return this.save({\n            url,\n            data\n        }, callback, errCallback);\n    },\n    /**\n     * 根据存储类型清空存储的所有数据\n     * @param  {String} cacheType\n     * @return {scope} this\n     */\n    clear(cacheType) {\n        deleteCacheDataByName(new RegExp('.*'), cacheType);\n\n        return this;\n    },\n    /**\n     * 修改缓存数据的前缀\n     * @param {String} prefix           以下划线开头，由字母、数字、或下划线组成\n     * @param {Boolean} clear[=true]    修改前缀前，是否移除已有的数据\n     */\n    setCachePrefix(prefix, clear = true) {\n        if (!/^_[_a-zA-Z]*_$/.test(prefix)) {\n            console.warn('以下划线开头和结尾，由字母、数字、或下划线组成');\n            return this;\n        }\n\n        if (clear) {\n            this.clear('sessionStorage');\n            this.clear('localStorage');\n            this.clear();\n        }\n\n        settings.cachePrefix = prefix;\n\n        return this;\n    },\n    /**\n     * 设置配置项\n     * @param {Object} setting\n     */\n    setSettings(setting) {\n        let item;\n\n        for (item in setting) {\n            if ('cachePrefix' === item) {\n                this.setCachePrefix(setting[item], false);\n            } else if (hasOwnProperty(settings, item)) {\n                settings[item] = setting[item];\n            }\n        }\n\n        return settings;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/adm.jquery.js","/**\n * @desc 配置信息，可以通过 `adm.setSettings` 方法修改\n * @alias settings\n * @type {Object}\n */\nexport default {\n    cachePrefix: '__DM__', // 缓存数据时使用的前缀，用于区别普通数据\n    isJquery: true, // 是否使用 jQuery 的 $.Deferred。为 false 则使用 Promise\n    errAlert: true, // ajax 出错时是否全局提示，fnAjaxFail 中使用。全局性开关\n    errMsg: '',     // 系统错误(40x/50x)时的提示信息，为空则使用 err.responseText\n    alert: (msg) => { // 全局性提示方法注册，可根据项目的 alert 组件进行注册\n        console.trace(msg);\n        // window.alert(msg);\n    },\n    /**\n     * ajax 开始/结束时回调方法\n     * 例如单击按钮后，在开始时禁用按钮，结束时恢复它；\n     * 再例如，在 ajax 开始时启用页面动画，结束时关闭页面动画。\n     * @param  {Object}  config.waiting - 参数内容可根据 `fnWaiting` 具体的处理来设置\n     * @param  {Number} time - 存在值时在 ajax 结束调用，值为 ajax 消耗的时间；省略时在 ajax 开始前被调用\n     * @return {void}\n     */\n    fnWaiting(config, time) {\n        // const waiting = config.waiting;\n        // if ('development' === process.env.NODE_ENV && time) {\n        //     console.trace('ajax 请求消耗时间：', time);\n        // }\n        // if (!waiting) {\n        //     return;\n        // }\n        // more...\n    },\n    /**\n     * ajax 请求开始前回调方法\n     * @param  {Object} config - ajax 请求配置，由于是引用传参，可在这里通过修改它实现 mock 数据等功能\n     * @return {void}\n     */\n    fnBeforeAjax(config) {},\n    /**\n     * 通用 ajax 请求返回时回调方法\n     * 对于基于接口的约定，如这里的示例：以 `code` 为 `200` 认为是成功的数据，否则为出错\n     * @param {Object} result - ajax 返回的数据结果\n     * @param {Function} callback - 成功回调方法\n     * @param {Function} errCallback - 出错回调方法\n     * @param {Object} config - ajax 请求参数配置，即 `adm.get/save` 的第一个参数\n     * @returns {Boolean|Object|Promise} 表示成功或失败，或成功后返回的数据(如对 result 处理后返回)，或 Promise 风格回调\n     */\n    fnAjaxDone(result, callback, errCallback, config) {\n        let success = false;\n\n        if (result && result.code === 200) {\n            if (callback) {\n                callback(result);\n            }\n\n            // code 200 认为成功，否则认为失败\n            success = true;\n        } else {\n            if (errCallback) {\n                errCallback(result);\n            }\n\n            // 全局性系统提示，设置为 false，则不提示，适合由用户自定义错误处理的情况\n            if (config.tipConfig !== false) {\n                result.message = result.message || '系统错误';\n                this.alert(result.message);\n            }\n        }\n\n        return success;\n    },\n    /**\n     * ajax 失败回调方法，一般为 30x、40x、50x 或返回格式不对、网络中断等\n     * @param  {Object} err\n     * @param  {Object} config\n     * @return {void}\n     */\n    fnAjaxFail(err, config) {\n        let msg = err.responseText || err.statusText || '';\n\n        if (msg.length > 300) {\n            msg = msg.slice(0, 300) + '...';\n        }\n\n        if (0 === err.status) {\n            this.alert('登录超时');\n            // window.location.reload();\n        } else if (config.errAlert || (void 0) === config.errAlert && this.errAlert) {\n            // errAlert = false 时禁止 40x/50x 等错误的全局提示\n            this.alert(config.errMsg || this.errMsg || ('数据请求失败: ' + msg));\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/settings.js","/**\n * cache helper\n */\nimport settings from './settings';\nimport DataCache from './DataCache';\n\n// 缓存数据对象。为了避免混淆，只缓存至一级结构\nconst dataCache = new DataCache();\n\n// 获取时间戳\nfunction getTime(t) {\n    return t ? t.getTime() : (new Date()).getTime();\n}\n\n/**\n * 修正 cacheName\n * @param  {String} cacheName 原始的值，可能是任意格式\n * @return {String}           修正后的 cacheName，以 cachePrefix 开头\n */\nfunction adjustCacheName(cacheName) {\n    if (!cacheName) {\n        return '';\n    }\n\n    cacheName = encodeURIComponent(('' + cacheName).replace(/\\//g, '.').replace(/^\\./, '').replace(/(^\\s+|\\s+$)/g, ''));\n    if (cacheName.indexOf(settings.cachePrefix)) {\n        // cacheName.indexOf(settings.cachePrefix) !== 0 加上前缀\n        cacheName = settings.cachePrefix + cacheName;\n    }\n\n    return cacheName;\n}\n/**\n * 根据 cacheType 取得 cacheStorage 对象\n * @param  {String} cacheType\n * @return {Object}\n */\nexport function getCacheStor(cacheType) {\n    let cacheStor = dataCache;\n\n    if (~['sessionStorage', 'localStorage'].indexOf(cacheType)) {\n        cacheStor = window[cacheType] || cacheStor;\n    }\n\n    return cacheStor;\n}\n/**\n * 根据 cacheName 名称层级获取对应 dataCache 中的缓存数据\n * @param  {String} cacheName - 名称，以 . 分割层级，如 ups.pa.query.tags.group\n * @param  {String} cacheType - 缓存类型：sessionStorage、localStorage 、 memory(默认)\n * @return {*}                  返回读取到的数据\n */\nexport function getCacheDataByName(cacheName, cacheType) {\n    let data;\n    const undefinedVal = void 0;\n    const cacheStor = getCacheStor(cacheType);\n\n    if (!(cacheName = adjustCacheName(cacheName))) {\n        return data;\n    }\n\n    data = cacheStor.getItem(cacheName);\n    try {\n        data = JSON.parse(data);\n    } catch (e) {\n        data = data;\n    }\n\n    // 缓存的数据设置了有效期 data._e\n    if (data && data._e) {\n        // console.log(getTime() - data._e, getTime(), data._e);\n\n        if (getTime() - data._e < 0) {\n            return data.d;\n        }\n        // 已过期，数据无效了，移除它\n        cacheStor.removeItem(cacheName);\n\n        return undefinedVal;\n    }\n\n    return data || undefinedVal;\n}\n/**\n * 根据 cacheName 名称尝试移除缓存中存在的数据\n * @param  {String|RegExp}  cacheName - 名称，以 . 分割层级，如 ups.pa.query.tags.group。支持正则匹配\n * @param  {String} cacheType - 缓存类型：sessionStorage、localStorage 、 memory(默认)\n * @return {*}\n */\nexport function deleteCacheDataByName(cacheName, cacheType) {\n    const cacheStor = getCacheStor(cacheType);\n    let item,\n        i,\n        len;\n\n    // 为正则，支持模糊删除\n    if (cacheName instanceof RegExp) {\n        len = cacheStor.length;\n\n        for (i = 0; i < len; i++) {\n            item = cacheStor.key(i);\n\n            if (\n                !item || // 兼容\n                item.indexOf(settings.cachePrefix) !== 0 || // 过滤前缀\n                !cacheName.test(item.slice(settings.cachePrefix.length)) // 规则检测\n            ) {\n                continue;\n            }\n\n            // 符合规则，移除\n            cacheStor.removeItem(item);\n        }\n\n        return;\n    }\n\n    // 精确的查找与删除\n    if (!(cacheName = adjustCacheName(cacheName))) {\n        return;\n    }\n\n    cacheStor.removeItem(cacheName);\n}\n/**\n * 存储数据到本地\n * @param {String} cacheName - 用于存储的名称\n * @param {*}      data - 任意类型的数据\n * @param {String} cacheType - 存储类型，支持三种方式：sessionStorage、localStorage 和内存中(默认)\n */\nexport function saveTOCache(cacheName, data, cfg = {}) {\n    if (!(cacheName = adjustCacheName(cacheName))) {\n        return;\n    }\n\n    // console.log(cacheName, data, cfg);\n\n    const {cache: cacheType, expires} = cfg;\n    const cacheStor = getCacheStor(cacheType);\n\n    // expires 应为毫秒整数\n    if (+expires) {\n        data = {\n            d: data,\n            _e: (expires instanceof Date) ? getTime(expires) : (getTime() + expires)\n        };\n    }\n\n    if (cacheStor === dataCache) {\n        // 存到内存 dataCache\n        cacheStor.setItem(cacheName, data);\n    } else {\n        cacheStor.setItem(cacheName, JSON.stringify(data));\n    }\n}\n\n/**\n * 是否为类字符串\n */\nexport function isString(text) {\n    const type = typeof text;\n\n    return 'string' === type || 'number' === type;\n}\n/**\n * 返回包装done/fail API语法糖的 Promise\n * @param  {Boolean} isJquery 是否为 jQuery，为true 则返回 $.Deferred\n * @return {Promise}\n */\nexport function getPromise(isJquery) {\n    if (isJquery) {\n        return $.Deferred();\n    }\n\n    let resolve, reject;\n    const $p = new window.Promise((rs, rj) => {\n        resolve = rs;\n        reject = rj;\n    });\n\n    $p.resolve = resolve;\n    $p.reject = reject;\n\n    $p.done = function (cb) {\n        return $p.then(cb);\n    };\n\n    $p.fail = function (cb) {\n        return $p.then(null, cb);\n    };\n\n    $p.always = function (cb) {\n        return $p.then(cb, cb);\n    };\n\n    return $p;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/cache-helper.js","/**\n * @file 基本的数据缓存类\n */\n\n/**\n * 内存缓存数据对象类，与 `localStorage` API 保持一致\n */\nclass DataCache {\n    constructor() {\n        this.length = 0;\n        this.cache = {};\n    }\n    /**\n     * 获取值\n     * @param  {String} key\n     * @return {*}\n     */\n    getItem(key) {\n        return this.cache[key];\n    }\n    /**\n     * 设置值\n     * @param {String} key\n     * @param {*} value\n     */\n    setItem(key, value) {\n        if (!this.cache.hasOwnProperty(key)) {\n            this.length++;\n        }\n        this.cache[key] = value;\n    }\n    /**\n     * 删除一个值\n     * @param  {String} key\n     * @return {void}\n     */\n    removeItem(key) {\n        if (this.cache.hasOwnProperty(key)) {\n            this.length--;\n            delete this.cache[key];\n        }\n    }\n    /**\n     * 清空\n     */\n    clear() {\n        this.length = 0;\n        this.cache = {};\n    }\n    /**\n     * 取得第 index 个数的 key\n     * @param  {Number} index\n     * @return {*}\n     */\n    key(index) {\n        let key, _index = 0;\n\n        for (key in this.cache) {\n            if (index === _index) {\n                return key;\n            }\n            _index++;\n        }\n\n        return null;\n    }\n}\n\nexport default DataCache;\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/DataCache.js"],"sourceRoot":""}