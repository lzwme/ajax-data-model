{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 12f2f976acaa48dc8fda","webpack:///./src/adm.jquery.js","webpack:///./src/common/settings.js","webpack:///./src/common/cache-helper.js","webpack:///./src/common/DataCache.js"],"names":["requestAjax","config","callback","errCallback","fnCB","$p","isJquery","url","console","trace","reject","data","btnWaiting","waiting","dataType","test","search","window","location","host","fnBeforeAjax","item","JSON","stringify","fnWaiting","startTime","Date","$","ajax","extend","type","ajaxParam","then","result","success","fnAjaxDone","res","Function","resolve","err","fnAjaxFail","always","get","undefined","cacheName","cacheData","$promise","fromCache","cache","save","hasOwnProperty","delete","RegExp","getAll","cacheType","cacheStor","key","_cache","i","len","length","indexOf","cachePrefix","replace","parse","getItem","e","getJSON","post","clear","setCachePrefix","prefix","warn","setSettings","setting","errAlert","alert","msg","time","code","tipConfig","message","status","responseText","statusText","getCacheStor","getCacheDataByName","deleteCacheDataByName","saveTOCache","isString","getPromise","dataCache","adjustCacheName","encodeURIComponent","slice","removeItem","setItem","text","Deferred","Promise","rs","rj","done","cb","fail","DataCache","value","index","_index"],"mappings":"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","file":"adm.jquery.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"adm\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"adm\"] = factory();\n\telse\n\t\troot[\"adm\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 12f2f976acaa48dc8fda\n **/","/**\n * @file 全局数据模型 model\n * 提供数据的读取、保存/缓存、删除、更新等操作。各模块 model 可继承该模型，以进行模块范围内的数据存取操作。\n * @module adm\n * @author lizhiwen@meizu.com\n * @since 2016-03-31 - 2016-09-25\n *\n * @example\n * import adm from 'ajax-data-model';\n * let upsModel = $.extend(true, {}, adm, {aa: 'ccc', restapi: {task_type: '/rest/task/type'}});\n * // 支持的方法：upsModel.get、upsModel.save、upsModel.delete、upsModel.clear\n * // 配置了 url，则都返回 Promise 对象，不管是否缓存\n * upsModel.get({url: '/rest/xxx'}).done().fail().then();\n * // 保存数据到 localStorage 中\n * upsModel.save('appList', [{music: 'test'}], 'localStorage');\n * // 通过名字获取，返回存储的数据或者 undefined\n * upsModel.get('appList');\n * upsModel.get('appList', 'localStorage');\n *\n * @example\n * // 获取 task_type 数据\n * adm.get({\n *     url: upsModel.restapi.task_type,\n *     cache: 'sessionStorage',     // 缓存到 sessionStorage\n *     fromCache: 'sessionStorage', // 获取时优先从 sessionStorage 读取\n *     cacheName: 'task_type' // 缓存、从缓存读取时使用的名称\n * }).then((result) => {\n *     let taskTypeList = result.value || [];\n *     console.log(taskTypeList);\n * }, (err) {\n *     console.log(err);\n * });\n */\n'use strict';\n\n// import $ from 'jquery';\n\nimport settings from './common/settings';\nimport {\n    getCacheStor,\n    deleteCacheDataByName,\n    getCacheDataByName,\n    saveTOCache,\n    isString,\n    getPromise\n} from './common/cache-helper';\n\n/**\n * ajax 请求通用方法\n * @param {Object}   config - 请求参数配置\n * @param {String}   config.url - ajax url，必须存在，`config.ajaxParam` 中配置此参数无效\n * @param {Object}   config.ajaxParam - ajax 额外参数扩展，如涉及文件上传等\n * @param {Object}   config.data - ajax 请求的参数\n * @param {Object}   config.waiting - 用于传递给 settings.fnWaiting 方法使用的参数配置\n * @param {Object}   config.tipConfig[true] - ajax 出错时的提示配置。配置为 false 时，禁用全局的系统提示，包括 成功/出错/404/50x 等\n * @param {Object}   config.errAlert[true] - ajax error 时是否给出提示\n * @param {Function} callback - ajax 请求成功时回调\n * @param {Function} errCallback - ajax 请求失败或 code !== 200 时回调\n * @param {Object}   param - 传递给 ajax 请求的额外参数\n * @param {Function} fnCB - 请求到数据之后的立即回调方法，用于请求成功后需要前置处理的情况\n * @return {Promise}  用于自定义回调处理。\n *                    注意：ajax 请求的 done/fail 回调，与 callback/errCallback 可能有区别，具体取决于 fnAjaxDone 与 fnAjaxFail 回调的实现\n */\nfunction requestAjax(config, callback, errCallback, fnCB) {\n    const $p = getPromise(settings.isJquery);\n\n    if (!config.url || typeof config.url !== 'string') {\n        console.trace('请求 URL API 不存在，或格式不对：', config.url);\n        return $p.reject('请求 URL API 不存在，或格式不对：', config.url);\n    }\n\n    // data.btnWaiting 的兼容，应使用 config.waiting 参数\n    if (config.data && config.data.btnWaiting) {\n        config.waiting = config.waiting || config.data.btnWaiting;\n        delete config.data.btnWaiting;\n    }\n\n    // jsonp 兼容\n    let dataType = 'json';\n\n    if (/^https?:\\/\\//.test(config.url) && config.url.search(window.location.host) === -1) {\n        dataType = 'jsonp';\n    }\n\n    // 请求前回调，可以引用方式修改 config\n    if (settings.fnBeforeAjax) {\n        settings.fnBeforeAjax(config);\n    }\n\n    // 格式化 config.data\n    if ('object' === typeof config.data) {\n        for (let item in config.data) {\n            if ('string' !== typeof config.data[item]) {\n                config.data[item] = JSON.stringify(config.data[item]);\n            }\n        }\n    }\n\n    // ajax 请求前处理，与请求后处理呼应\n    settings.fnWaiting(config);\n\n    const startTime = new Date();\n\n    return $.ajax($.extend(true, {\n        type: 'GET',\n        dataType\n    }, config.ajaxParam, {\n        url: config.url,\n        data: config.data\n    })).then((result) => {\n        const success = settings.fnAjaxDone(result, (res) => {\n            if (fnCB instanceof Function) {\n                fnCB(result);\n            }\n\n            if (callback instanceof Function) {\n                callback(res);\n            }\n        }, errCallback, config);\n\n        // 为 false，设为失败回调\n        if (!success) {\n            return $p.reject(result);\n        }\n\n        // 为 true\n        if (true === success) {\n            return $p.resolve(result);\n        }\n\n        // 为 Promise 风格回调\n        if ('function' === typeof success.then) {\n            // $p = success;\n            // return $p;\n            return success;\n        }\n\n        // 为其它类型，返回 success 内容\n        return $p.resolve(success);\n    }, (err) => {\n        settings.fnAjaxFail(err, config);\n\n        if (errCallback instanceof Function) {\n            errCallback(err);\n        }\n\n        return $p.reject(err);\n    }).always(() => {\n        // ajax 完成后处理\n        settings.fnWaiting(config, new Date() - startTime);\n    });\n\n    // return $p;\n}\n\n/**\n * 全局数据模型 model\n * @alias module:adm\n * @type {Object}\n */\nexport default {\n    /**\n     * 数据获取，可为远程url、缓存等\n     * @param {Object} config 为字符串时，从缓存中读取数据，否则为从远程获取数据，参数如下：\n     * ```js\n     * {\n     *     url: '',\n     *     data: {},         // url 请求参数\n     *     cache: false,     // 配置了 url 获取数据时，是否缓存数据。可取值：`false/true/sessionStorage/localStorage`\n     *     fromCache: false, // 配置了 url，是否首先尝试从缓存中读取数据。可取值：`false/true/sessionStorage/localStorage`\n     *     cacheName: 'ddd', // 配置了 url，如果缓存数据，配置其名称，不配置则取值 url (/ 替换为 . 作为深度路径)\n     *     tipConfig: {delay: 2000} // ajax 出错时的提示配置。配置为 false 时，禁用全局的系统提示，包括 成功/出错/404/50x 等\n     *     errAlert: true    // ajax error 时是否给出全局提示\n     *     waiting: {}       // 按钮等待等配置，用于传递给 settings.fnWaiting 方法\n     *     ajaxParam: null   // ajax 额外参数扩展，如涉及文件上传等，需要修改部分参数。其中 url 参数无效，应当使用 config.url\n     * }\n     * ```\n     * @param {Object} callback 成功回调方法\n     * @param {Object} errCallback 从 url 获取时，失败后需要做一些处理的回调方法\n     * }\n     */\n    get(config, callback, errCallback) {\n        if (!config) {\n            return undefined;\n        }\n\n        let cacheName, cacheData;\n        const $promise = getPromise(settings.isJquery);\n\n        if (isString(config)) {\n            // 第一个参数为字符串，则为名称，直接返回对应值\n            cacheName = config;\n        }\n\n        // 配置了 url，从 url 中获取\n        if (config.url) {\n            cacheName = config.cacheName || config.url;\n            cacheData = getCacheDataByName(cacheName, config.fromCache);\n\n            // fromCache 为 true，尝试从缓存中获取数据\n            if (config.fromCache && cacheData) {\n                if (callback instanceof Function) {\n                    callback(cacheData);\n                }\n\n                $promise.resolve(cacheData);\n                // return cacheData; // 返回数据\n                return $promise; // 这里改了后不兼容旧的调用，应该注意 bug 的出现！\n            }\n\n            config.ajaxParam = $.extend(config.ajaxParam, {\n                type: 'GET'\n            });\n\n            return requestAjax(config, callback, errCallback, (result) => {\n                // cache 为 true，缓存数据\n                if (config.cache) {\n                    this.save(cacheName, result, config.cache);\n                }\n            });\n        } else if (config.hasOwnProperty('url')) { // 配置了 url，但 url 值为空\n            console.trace('配置了 URL 参数，但值为空：', config);\n            $promise.reject('配置了 URL 参数，但值为空', config);\n        } else {\n            // 未配置 url，则必须配置 cacheName，或者 config 为字符串(作为cacheName)，从缓存中取得数据\n            if (!cacheName && config) {\n                cacheName = config.cacheName;\n            }\n            cacheData = getCacheDataByName(cacheName, config.fromCache || callback);\n\n            if (callback instanceof Function) {\n                callback(cacheData);\n            }\n\n            return cacheData;\n        }\n\n        return $promise;\n    },\n    /**\n     * 设置/存储数据\n     * @param {Object|String} config - 配置信息。也可以为字符串，则为需存储的数据名称。与 {@link module:adm~get} 的 config 参数相同\n     * @param {Function|Object} callback - 存储成功后回调方法。当 config 为字符串时，为需存储的数据，或方法执行后返回要存储的数据\n     * @param {Function|String} errCallback - 从 url 获取时，失败后需要做一些处理的回调方法。config 为字符串时，为 cacheType 类型\n     * @example\n     * // 存储数据到 localStorage，名称为 testdataName\n     * adm.save('testdataName', {test: 1}, 'localStorage');\n     * @example\n     * // 存储数据到远程，同时存储到 sessionStorage\n     * adm.save({url: '/rest/dd', data: {test: 1}, cache: 'sessionStorage'});\n     */\n    save(config, callback, errCallback) {\n        if (!config) {\n            return '';\n        }\n\n        let cacheName, cacheData;\n        const $promise = getPromise(settings.isJquery);\n\n        if (isString(config)) { // config 为字符串，则作为cacheName\n            cacheName = '' + config;\n            if (callback instanceof Function) { // 可以存储为回调方法执行后的结果\n                saveTOCache(cacheName, callback(), errCallback);\n            } else {\n                saveTOCache(cacheName, callback, errCallback);\n            }\n        } else if (config.url) { // 配置了 url，将数据存储到远程\n            cacheName = config.cacheName || config.url;\n            cacheData = getCacheDataByName(cacheName, config.fromCache);\n\n            // fromCache 为 true，尝试从缓存中获取数据\n            if (config.fromCache && cacheData) {\n                if (callback instanceof Function) {\n                    callback(cacheData);\n                }\n\n                $promise.resolve(cacheData);\n                // return cacheData; // 返回数据\n                return $promise; // 这里改了后不兼容旧的调用，应该注意 bug 的出现！\n            }\n\n            config.ajaxParam = $.extend({\n                type: 'POST'\n            }, config.ajaxParam);\n\n            return requestAjax(config, callback, errCallback, (result) => {\n                if (config.cache) {\n                    // 远程存储成功了，本地也需缓存数据时\n                    saveTOCache(cacheName, result, config.cache);\n                }\n            });\n        } else if (config.hasOwnProperty('url')) { // 配置了url，但 url 值为空\n            console.trace('配置了 URL 参数，但值为空：', config);\n            $promise.reject('配置了 URL 参数，但值为空', config);\n        } else if (config.cacheName) { // 没有设置 url，但设置了 cacheName，则保存数据到本地\n            saveTOCache(config.cacheName, config.data, config.cache);\n\n            if (callback instanceof Function) {\n                callback(cacheData);\n            }\n        }\n\n        return $promise;\n    },\n    /**\n     * 删除一个数据\n     * @param {Object} config - 为字符串时，作为 cacheName 尝试从缓存中删除数据。否则格式如下：\n     * ```js\n     * {\n     *     url: '',       // 配置了 url，从远程删除数据，否则从缓存中删除\n     *     cache: false,  // 配置了 url，是否还尝试从缓存中删除数据。可取值：false/true/sessionStorage/localStorage\n     *     cacheName: ''  // 从缓存中删除数据时，提供其名称。\n     * }\n     * ```\n     */\n    delete(config, callback, errCallback) {\n        if (!config) {\n            return '';\n        }\n\n        const $promise = getPromise(settings.isJquery);\n        let cacheName;\n\n        if (isString(config) || config instanceof RegExp) {\n            // 第一个参数为字符串或正则，callback 就是 cacheType\n            deleteCacheDataByName(config, callback);\n            // 删除完成都返回执行成功\n            $promise.resolve();\n        } else if (config.url) {\n            // 配置了 url，从远程删除数据\n            return requestAjax(config, callback, errCallback, {\n                type: 'DELETE'\n            }, () => {\n                if (config.cache) {\n                    // 远程删除成功了，本地也需清空时\n                    cacheName = config.cacheName || config.url;\n                    deleteCacheDataByName(cacheName, config.cache);\n                }\n            });\n        } else if (config.hasOwnProperty('url')) { // 配置了url，但 url 值为空\n            console.trace('配置了 URL 参数，但值为空：', config);\n            $promise.reject('配置了 URL 参数，但值为空', config);\n        } else if (config && config.cacheName) {\n            deleteCacheDataByName(config.cacheName, config.cache);\n            $promise.resolve();\n        }\n\n        return $promise;\n    },\n    /**\n     * 返回所有存储中的所有数据\n     * @param  {String} cacheType 存储的类型：sessionStorage、localStorage 或 memory\n     * @return {Object}\n     */\n    getAll(cacheType) {\n        let cacheStor = getCacheStor(cacheType);\n        let item, key, _cache = {};\n        let i, len = cacheStor.length;\n\n        for (i = 0; i < len; i++) {\n            item = cacheStor.key(i);\n\n            if (!item || 0 !== item.indexOf(settings.cachePrefix)) {\n                continue;\n            }\n\n            key = item.replace(settings.cachePrefix, '');\n            try {\n                _cache[key] = JSON.parse(cacheStor.getItem(item));\n            } catch (e) {\n                _cache[key] = cacheStor.getItem(item);\n            }\n        }\n\n        return _cache;\n    },\n    /**\n     * {@link module:dataModel.get} 的 ajax 快捷方法\n     * @see  module:dataModel.get\n     * @param  {String}   url         url 地址\n     * @param  {Object}  data        要传递的参数，可省略\n     * @param  {Function} callback    成功回调\n     * @param  {Function}   errCallback 失败回调\n     * @returns {Promise}\n     */\n    getJSON(url, data = {}, callback, errCallback) {\n        // data 参数可以省略\n        if (data instanceof Function) {\n            errCallback = callback;\n            callback = data;\n        }\n\n        return this.get({\n            url,\n            data\n        }, callback, errCallback);\n    },\n    /**\n     * {@link module:dataModel.save} 的 ajax 快捷方法\n     * @see  module:dataModel.save\n     * @param  {String}   url         url 地址\n     * @param  {Object}  data        要传递的参数\n     * @param  {Function} callback    成功回调\n     * @param  {Function}   errCallback 失败回调\n     * @returns {Promise}\n     */\n    post(url, data, callback, errCallback) {\n        return this.save({\n            url,\n            data\n        }, callback, errCallback);\n    },\n    /**\n     * 根据存储类型清空存储的所有数据\n     * @param  {String} cacheType\n     * @return {scope} this\n     */\n    clear(cacheType) {\n        deleteCacheDataByName(new RegExp('.*'), cacheType);\n\n        return this;\n    },\n    /**\n     * 修改缓存数据的前缀\n     * @param {String} prefix           以下划线开头，由字母、数字、或下划线组成\n     * @param {Boolean} clear[=true]    修改前缀前，是否移除已有的数据\n     */\n    setCachePrefix(prefix, clear = true) {\n        if (!/^_[_a-zA-Z]*_$/.test(prefix)) {\n            console.warn('以下划线开头和结尾，由字母、数字、或下划线组成');\n            return this;\n        }\n\n        if (clear) {\n            this.clear('sessionStorage');\n            this.clear('localStorage');\n            this.clear();\n        }\n\n        settings.cachePrefix = prefix;\n\n        return this;\n    },\n    /**\n     * 设置配置项\n     * @param {Object} setting\n     */\n    setSettings(setting) {\n        let item;\n\n        for (item in setting) {\n            if ('cachePrefix' === item) {\n                this.setCachePrefix(setting[item], false);\n            } else if (settings.hasOwnProperty(item)) {\n                settings[item] = setting[item];\n            }\n        }\n\n        return settings;\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/adm.jquery.js\n **/","/**\n * @desc 配置信息，可以通过 `adm.setSettings` 方法修改\n * @alias settings\n * @type {Object}\n */\nexport default {\n    cachePrefix: '__DM__', // 缓存数据时使用的前缀，用于区别普通数据\n    isJquery: true, // 是否使用 jQuery 的 $.Deferred。为 false 则使用 Promise\n    errAlert: true, // ajax 出错时是否全局提示，fnAjaxFail 中使用。全局性开关\n    alert: (msg) => { // 全局性提示方法注册，可根据项目的 alert 组件进行注册\n        console.trace(msg);\n        // window.alert(msg);\n    },\n    /**\n     * ajax 开始/结束时回调方法\n     * 例如单击按钮后，在开始时禁用按钮，结束时恢复它；\n     * 再例如，在 ajax 开始时启用页面动画，结束时关闭页面动画。\n     * @param  {Object}  config.waiting - 参数内容可根据 `fnWaiting` 具体的处理来设置\n     * @param  {Number} time - 存在值时在 ajax 结束调用，值为 ajax 消耗的时间；省略时在 ajax 开始前被调用\n     * @return {void}\n     */\n    fnWaiting(config, time) {\n        // const waiting = config.waiting;\n        // if ('development' === process.env.NODE_ENV && time) {\n        //     console.trace('ajax 请求消耗时间：', time);\n        // }\n        // if (!waiting) {\n        //     return;\n        // }\n        // more...\n    },\n    /**\n     * ajax 请求开始前回调方法\n     * @param  {Object} config - ajax 请求配置，由于是引用传参，可在这里通过修改它实现 mock 数据等功能\n     * @return {void}\n     */\n    fnBeforeAjax(config) {},\n    /**\n     * 通用 ajax 请求返回时回调方法\n     * 对于基于接口的约定，如这里的示例：以 `code` 为 `200` 认为是成功的数据，否则为出错\n     * @param {Object} result - ajax 返回的数据结果\n     * @param {Function} callback - 成功回调方法\n     * @param {Function} errCallback - 出错回调方法\n     * @param {Object} config - ajax 请求参数配置，即 `adm.get/save` 的第一个参数\n     * @returns {Boolean|Object|Promise} 表示成功或失败，或成功后返回的数据(如对 result 处理后返回)，或 Promise 风格回调\n     */\n    fnAjaxDone(result, callback, errCallback, config) {\n        let success = false;\n\n        if (result && result.code === 200) {\n            if (callback) {\n                callback(result);\n            }\n\n            // code 200 认为成功，否则认为失败\n            success = true;\n        } else {\n            if (errCallback) {\n                errCallback(result);\n            }\n\n            // 全局性系统提示，设置为 false，则不提示，适合由用户自定义错误处理的情况\n            if (config.tipConfig !== false) {\n                result.message = result.message || '系统错误';\n                this.alert(result.message);\n            }\n\n        }\n\n        return success;\n    },\n    /**\n     * ajax 失败回调方法，一般为 30x、40x、50x 或返回格式不对、网络中断等\n     * @param  {Object} err\n     * @param  {Object} config\n     * @return {void}\n     */\n    fnAjaxFail(err, config) {\n        if (0 === err.status) {\n            this.alert('登录超时');\n            // window.location.reload();\n        } else if (config.errAlert || undefined === config.errAlert && this.errAlert) {\n            // errAlert = false 时禁止 40x/50x 等错误的全局提示，可全局禁止，或本次禁止\n            this.alert('数据请求失败: ' + (err.responseText || err.statusText));\n        }\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/common/settings.js\n **/","/**\n * cache helper\n */\nimport settings from './settings';\nimport DataCache from './DataCache';\n\n// 缓存数据对象。为了避免混淆，只缓存至一级结构\nconst dataCache = new DataCache();\n\n/**\n * 修正 cacheName\n * @param  {String} cacheName 原始的值，可能是任意格式\n * @return {String}           修正后的 cacheName，以 cachePrefix 开头\n */\nfunction adjustCacheName(cacheName) {\n    if (!cacheName) {\n        return '';\n    }\n\n    cacheName = encodeURIComponent(('' + cacheName).replace(/\\//g, '.').replace(/^\\./, '').replace(/(^\\s+|\\s+$)/g, ''));\n    if (cacheName.indexOf(settings.cachePrefix) !== 0) {\n        cacheName = settings.cachePrefix + cacheName;\n    }\n\n    return cacheName;\n}\n/**\n * 根据 cacheType 取得 cacheStorage 对象\n * @param  {String} cacheType\n * @return {Object}\n */\nexport function getCacheStor(cacheType) {\n    let cacheStor = dataCache;\n\n    if ('sessionStorage' === cacheType || 'localStorage' === cacheType) {\n        cacheStor = window[cacheType] || cacheStor;\n    }\n\n    return cacheStor;\n}\n/**\n * 根据 cacheName 名称层级获取对应 dataCache 中的缓存数据\n * @param  {String} cacheName - 名称，以 . 分割层级，如 ups.pa.query.tags.group\n * @param  {String} cacheType - 缓存类型：sessionStorage、localStorage 、 memory(默认)\n * @return {*}                  返回读取到的数据\n */\nexport function getCacheDataByName(cacheName, cacheType) {\n    let data, cacheStor = getCacheStor(cacheType);\n\n    if (!(cacheName = adjustCacheName(cacheName))) {\n        return data;\n    }\n\n    try {\n        data = JSON.parse(cacheStor.getItem(cacheName));\n    } catch (e) {\n        data = cacheStor.getItem(cacheName);\n    }\n\n    return data || undefined;\n}\n/**\n * 根据 cacheName 名称尝试移除缓存中存在的数据\n * @param  {String|RegExp}  cacheName - 名称，以 . 分割层级，如 ups.pa.query.tags.group。支持正则匹配\n * @param  {String} cacheType - 缓存类型：sessionStorage、localStorage 、 memory(默认)\n * @return {*}\n */\nexport function deleteCacheDataByName(cacheName, cacheType) {\n    let item,\n        cacheStor = getCacheStor(cacheType),\n        i,\n        len;\n\n    // 为正则，支持模糊删除\n    if (cacheName instanceof RegExp) {\n        len = cacheStor.length;\n\n        for (i = 0; i < len; i++) {\n            item = cacheStor.key(i);\n\n            if (\n                !item || // 兼容\n                item.indexOf(settings.cachePrefix) !== 0 || // 过滤前缀\n                !cacheName.test(item.slice(settings.cachePrefix.length)) // 规则检测\n            ) {\n                continue;\n            }\n\n            // 符合规则，移除\n            cacheStor.removeItem(item);\n        }\n\n        return;\n    }\n\n    // 精确的查找与删除\n    if (!(cacheName = adjustCacheName(cacheName))) {\n        return;\n    }\n\n    cacheStor.removeItem(cacheName);\n}\n/**\n * 存储数据到本地\n * @param {String} cacheName - 用于存储的名称\n * @param {*}      data - 任意类型的数据\n * @param {String} cacheType - 存储类型，支持三种方式：sessionStorage、localStorage 和内存中(默认)\n */\nexport function saveTOCache(cacheName, data, cacheType) {\n    if (!(cacheName = adjustCacheName(cacheName))) {\n        return;\n    }\n\n    const cacheStor = getCacheStor(cacheType);\n\n    if (cacheStor === dataCache) {\n        // 存到内存 dataCache\n        cacheStor.setItem(cacheName, data);\n    } else {\n        cacheStor.setItem(cacheName, JSON.stringify(data));\n    }\n}\n\n/**\n * 是否为类字符串\n */\nexport function isString(text) {\n    let type = typeof text;\n\n    if ('string' === type || 'number' === type) {\n        return true;\n    }\n    return false;\n}\n/**\n * 返回包装done/fail API语法糖的 Promise\n * @param  {Boolean} isJquery 是否为 jQuery，为true 则返回 $.Deferred\n * @return {Promise}\n */\nexport function getPromise(isJquery) {\n    if (isJquery) {\n        return $.Deferred();\n    }\n\n    let resolve, reject;\n    const $p = new window.Promise((rs, rj) => {\n        resolve = rs;\n        reject = rj;\n    });\n\n    $p.resolve = resolve;\n    $p.reject = reject;\n\n    $p.done = function (cb) {\n        return $p.then(cb);\n    };\n\n    $p.fail = function (cb) {\n        return $p.then(null, cb);\n    };\n\n    $p.always = function (cb) {\n        return $p.then(cb, cb);\n    };\n\n    return $p;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/common/cache-helper.js\n **/","/**\n * @file 基本的数据缓存类\n */\n\n/**\n * 内存缓存数据对象类，与 `localStorage` API 保持一致\n */\nclass DataCache {\n    constructor() {\n        this.length = 0;\n        this.cache = {};\n    }\n    /**\n     * 获取值\n     * @param  {String} key\n     * @return {*}\n     */\n    getItem(key) {\n        return this.cache[key];\n    }\n    /**\n     * 设置值\n     * @param {String} key\n     * @param {*} value\n     */\n    setItem(key, value) {\n        this.cache[key] = value;\n        this.length++;\n    }\n    /**\n     * 删除一个值\n     * @param  {String} key\n     * @return {void}\n     */\n    removeItem(key) {\n        if (this.cache.hasOwnProperty(key)) {\n            this.length--;\n            delete this.cache[key];\n        }\n    }\n    /**\n     * 清空\n     */\n    clear() {\n        this.length = 0;\n        this.cache = {};\n    }\n    /**\n     * 取得第 index 个数的 key\n     * @param  {Number} index\n     * @return {*}\n     */\n    key(index) {\n        let key, _index = 0;\n\n        for (key in this.cache) {\n            if (index === _index) {\n                return key;\n            }\n            _index++;\n        }\n\n        return null;\n    }\n}\n\nexport default DataCache;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/common/DataCache.js\n **/"],"sourceRoot":""}